.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WMJUMP 1"
.TH WMJUMP 1 "2014-08-19" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
wmjump \- keyboard navigation of the desktop; use the keyboard to
switch between windows and workspaces
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    wmjump [OPTION]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBwmjump\fR 
pops up a dialog box with a list of running windows in their historical order,
and a letter
next to each item. Pressing the corresponding key brings you to that window.
Pressing the space bar brings you to the previous window.
Pressing the number key 1 to 9 brings you to the
corresponding workspace.
.PP
If you use \fICompiz\fR 
(which is the default window manager on recent Ubuntu distributions), 
then use the Compiz compatibility mode:
.PP
.Vb 1
\&    wmjump \-\-compiz
.Ve
.PP
In \fICompiz\fR the workspaces are arranged into a grid, so each workspace has a
pair of ``coordinates'' x,y. To switch to a given workspace in a \fB\-\-compiz\fR
mode, press two number keys. For example, if you need to switch to the desktop
with coordinates x,y=1,3 you have to first press 1 and then press 3.  (The
switching works for the grid of up to 9x9 workspaces.)
.PP
I recommend creating a keyboard shortcut for  \fBwmjump\fR (or \fBwmjump \-\-compiz\fR
).  In \fIXfce\fR, go to Settings \-> Settings Manager \-> Keyboard \-> Keyboard
Shortcuts. In \fIgnome\fR, google for: gnome custom keyboard shortcut.  I use
<Alt>\-k after \fIIon3\fR. Also see \fB\s-1OPTIONS\s0\fR.
.PP
The items are colored according to the window class. The assignment of colors
can be changed in the configuration files, as described below.  I recommend
having the \fIIndustrial\fR gtk engine installed, because it looks nice with the
multicolored buttons. (It is probably installed by default in Ubuntu.) It is
not necessary to make it a default gtk engine, only \fBwmjump\fR will use it.
.PP
\&\fBwmjump\fR can show a header message at the top of its window. The message
is read from the file \fB~/.wmjump/wmjump\-message\fR, if this file is present
and is not empty. For example, the user may schedule a cron job to put the
current date+time into this file.
.PP
\&\fBwmjump\fR is supposed to work on all \fIEWMH/NetWM\fR compatible window managers.
I tested it on \fIXfce\fR (Xubuntu), \fIgnome\fR \fIMetacity\fR (Ubuntu, Fedora),
\&\fIgnome\fR \fICompiz\fR (see \s-1OPTION \s0\fB\-\-compiz\fR), \fIKwin\fR (Kubuntu) and \fIStumpWM\fR
(v0.9.5 on Intrepid, see special instructions for \fIStumpWM\fR in the \s-1SETUP\s0
section). Works with \fIxmonad\fR, see the xmonad section in the wiki.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following options modify the behaviour of  \fBwmjump\fR
.IP "\fB\-c, \-\-current\fR" 4
.IX Item "-c, --current"
Only list windows on the current desktop. I recommend two separate keyboard
shortcuts, for example: \fIAlt\fR\fI\-k\fR for \fBwmjump\fR and \fIAlt\fR\fI\-j\fR 
for \fBwmjump \-\-current\fR.
.Sp
Then pressing \fIAlt\fR\fI\-k\fR shows all the windows on all desktops, so you can
jump across desktops.  On the other hand, pressing \fIAlt\fR\fI\-j\fR shows only the
windows on the current desktop. This is useful when you are running many
windows, organized by the desktop. (For example, network applications on
Desktop 1, games on Desktop 2, office suite on Desktop 3, etc.)
.IP "\fB\-\-compiz\fR" 4
.IX Item "--compiz"
Use this option if you are on \fICompiz\fR window manager (``wall'').  The \fICompiz\fR
``wall'' desktop is organized into a 2\-dimensional grid. If you want to
teleport to the viewport with coordinate x,y you should press two corresponding
number keys.  For example, to jump to x,y=2,3 press first 2 then 3.
.IP "\fB\-\-easy\fR" 4
.IX Item "--easy"
With this option wmjump uses a simplified procedure for switching 
windows. This can make switching faster and more reliable, but does not
work on some window managers. For example, this does not work on
*Metacity* (but does work on *xmonad*)
.IP "\fB\-g\fR <desktop number>" 4
.IX Item "-g <desktop number>"
This is a workaround for \fIStumpWM\fR, and maybe some other window managers.
Sometimes wmjump can not properly determine the current workspace number (group
number in \fIStumpWM\fR).  But with the \fB\-g\fR option you can write a wrapper
script which explicitly tells wmjump on which desktop it is started. See \fB\s-1SETUP\s0\fR
section for an example of such a wrapper on \fIStumpWM\fR.
.IP "\fB\-\-location=60x40\fR" 4
.IX Item "--location=60x40"
The location of the wmjump window, the upper left corner with respect
to the upper left corner of the screen. Of course you can use any
\&\fB\-\-location=100x20\fR or \fB\-\-location=300x300\fR or whatever values are desired.
.IP "\fB\-p, \-\-persist\fR" 4
.IX Item "-p, --persist"
Starting with v0.9 \fBwmjump\fR window is auto-destroyed on loss of focus. This is
to prevent ``stray'' wmjump windows. But if \fBwmjump\fR is started with  the
\&\fB\-\-persist\fR option, then the window will be preserved even after it loses the
focus.
.IP "\fB\-\-pipe\fR" 4
.IX Item "--pipe"
This is an experimental option. The idea is to try to speed up the firing-up
of the wmjump dialog. With this option, a pipe is created:
    ~/.wmjump/pipe.fifo
and the started wmjump is waiting on the pipe. In this regime wmjump
works like a ``daemon'' program. In some circumstances, this may speed
up the startup.
To fire up the wmjump dialog, do this:
    echo all>~/.wmjump/pipe.fifo
        (if you want to see all windows on all desktops)
        \s-1OR:
   \s0 echo current>~/.wmjump/pipe.fifo
        (if you want to see only windows on the current desktop,
         like wmjump \-\-current)
    putting anything else into pipe.fifo would lead to wmjump exiting,
    for example:
    echo exit>~/.wmjump/pipe.fifo
.IP "\fB\-r, \-\-reverse\fR" 4
.IX Item "-r, --reverse"
Use this option if you want to see the list of windows in reverse order.
.IP "\fB \-\-rich\fR" 4
.IX Item " --rich"
With this option the rich text formatting is used to make the wmjump
dialogue more readable. The hint letters are boldfaced. The name of the
currently active window is printed in larger font and underlined.
.IP "\fB\-\-timeout=\fR" 4
.IX Item "--timeout="
This is to set the timeout for the dialog window. If executed:
.Sp
.Vb 1
\&  wmjump \-\-timeout=3
.Ve
.Sp
the wmjump window will autodestroy in 3 seconds.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
By default, the program is executed silently. Use the verbose mode for diagnostics.
.SH "FILES"
.IX Header "FILES"
.Vb 1
\&  ~/.wmjump/wmjump\-message
.Ve
.PP
optional header message. For example, the user may schedule a cron job to put date/time there:
.PP
.Vb 1
\&  * * * * * /home/myname/bin/every\-min.sh > /home/myname/.wmjump/wmjump\-message
.Ve
.PP
where \fBevery\-min.sh\fR is something like:
.PP
.Vb 1
\&  date > /home/myname/.wmjump/wmjump\-message
.Ve
.PP
plus maybe some warnings;
.PP
.Vb 1
\&  ~/.wmjump/wmjump\-rc
.Ve
.PP
configures the user interface style (\s-1GTK\s0)
.PP
.Vb 1
\&  ~/.wmjump/wmjump\-blacklist
.Ve
.PP
the list of window classes which should not show up in \fBwmjump\fR
.PP
.Vb 1
\&  ~/.wmjump/wmjump\-previous\-window
.Ve
.PP
this is for the internal use of the program; do not modify this file
.PP
.Vb 1
\&  ~/.wmjump/pipe.fifo
.Ve
.PP
the pipe (see the experimental option \fB\-\-pipe\fR)
.SH "SETUP"
.IX Header "SETUP"
If you want to edit the configuration files, you should create a subdirectory
\&\fB.wmjump\fR in your home directory, and then copy to this directory the files
\&\fBwmjump-rc\fR and \fBwmjump-blacklist\fR which are found in \fB/etc/wmjump/\fR.  Then
you can edit these files. The file \fBwmjump-rc\fR defines the color and the text
font of the buttons, depending on the window class of the application. You can
learn the window classes of running windows by executing \fBwmjump \-v\fR from the
command line in a terminal. It will print a list of windows with classes, such
as \fINavigator\fR, \fIemacs\fR, \fIopera\fR etc.  The file \fBwmjump-blacklist\fR contains
the names of classes which you don't want to see in \fBwmjump\fR.  For example
\&\fIgnome-panel\fR and \fIdesktop_window\fR
.PP
For \fIStumpWM\fR users.  \fIStumpWM\fR is a tiling window manager. We tested wmjump
on \fIStumpWM 0.9.5\fR. At this time wmjump cannot determine the desktop number
(a.k.a ``group number'') if started on an empty desktop. As a workaround, we
start wmjump with the following wrapping script in \fI.stumpwmrc\fR:
.PP
.Vb 2
\&    (define\-key *top\-map* (kbd "M\-k") "exec wmjump \-\-reverse")
\&    (define\-key *top\-map* (kbd "M\-j") "eval\-line (let ((dnum (stumpwm::tile\-group\-number (current\-group)) ))  (run\-shell\-command (concatenate \*(Aqstring \e"exec wmjump \-\-current \-\-reverse \-g\e" (write\-to\-string (\- dnum 1)))) (stumpwm::tile\-group\-name (current\-group)))")
.Ve
.PP
This puts \fBwmjump\fR on \fIMETA-k\fR and \fBwmjump \-\-current\fR on \fIMETA-j\fR. This wrapping script
is to tell wmjump on which group it is started. It assumes that groups are numbered from 1
to up to 9. (Notice that wmjump looks up the
group number only if started with the \fB\-\-current\fR option. Without this option
it does not need to know the desktop number.)
.PP
For \fIxmonad\fR users, see the wiki page \f(CW\*(C`http://code.google.com/p/wmjump/wiki/xmonad\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
On \fIFvwm\fR the windows are listed in random order rather than historical,
making it much less useful.
.PP
\&\fIFocus\fR problems: sometimes the jumped window loses focus. This was only
observed when running \fIOpera\fR. In \fIXfce\fR the focus can be returned by
pressing \fIAlt-TAB\fR.  If this happens often, maybe try to recompile with
different values of \s-1TIME_SHORT, TIME_MIDDLE\s0 and \s-1TIME_LONG\s0 in the definitions of
\&\fImain.c\fR.  Also, in \fIXfce\fR, activating the \*(L"focus stealing prevention\*(R" helps.
It is in Settings \-> Settings Manager \-> Window manager tweaks \-> Focus.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The program makes use of the 
\&\fBwmctrl\fR
source code. It is inspired by 
the Firefox extension 
\&\fBVimperator\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
wmjump was written by Andrei Mikhailov <a.mkhlv at gmail dot com>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2008.
This program is free software which I release under the \s-1GNU\s0 General Public
License. You may redistribute and/or modify this program under the terms
of that license as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
To get a copy of the \s-1GNU\s0 General Puplic License,  write to the
Free Software Foundation, Inc., 675 Mass Ave, Cambridge, \s-1MA 02139, USA.\s0
